apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        applicationId "com.zhisland.android.blog"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }


    dexOptions {
        javaMaxHeapSize "4g"
    }

    signingConfigs {
        release {
            storeFile file("zhisland.keystore")
            storePassword "ZHisland"
            keyAlias "zhisland"
            keyPassword "ZHisland"
        }

        debug {
            storeFile file("zhisland.keystore")
            storePassword "ZHisland"
            keyAlias "zhisland"
            keyPassword "ZHisland"
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
            signingConfig signingConfigs.release
            multiDexEnabled true
        }

        debug {
            applicationIdSuffix ".debug"
            minifyEnabled false
            signingConfig signingConfigs.debug
            multiDexEnabled true
        }

    }

    productFlavors {
        mock {
        }
        prod {

        }
    }

    // Remove mockRelease as it's not needed.
    android.variantFilter { variant ->
        if (variant.buildType.name.equals('release')
                && variant.getFlavors().get(0).name.equals('mock')) {
            variant.setIgnore(true);
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }

}

dependencies {
    compile files('libs/Android_Location_V1.3.0.jar')
    compile files('libs/GetuiExt-2.0.3.jar')
    compile files('libs/GetuiSDK2.7.0.0.jar')
    compile files('libs/jg_filter_sdk_1.1.jar')
    compile files('libs/libammsdk.jar')
    compile files('libs/mframework.jar')
    compile files('libs/ShareSDK-Core-2.5.8.jar')
    compile files('libs/ShareSDK-Wechat-2.5.8.jar')
    compile files('libs/ShareSDK-Wechat-Core-2.5.8.jar')
    compile files('libs/ShareSDK-Wechat-Favorite-2.5.8.jar')
    compile files('libs/ShareSDK-Wechat-Moments-2.5.8.jar')
    compile project(':zhim_lib')
    compile 'com.jakewharton:butterknife:5.1.2'

    //=====UI===

    //=============测试依赖============
    testCompile rootProject.junit
    testCompile rootProject.mockito
    testCompile rootProject.robolectric
    testCompile rootProject.hamcrest

}
